// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetSalon.Models.EntityModels;

#nullable disable

namespace PetSalon.Models.Migrations
{
    [DbContext(typeof(PetSalonContext))]
    partial class PetSalonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetSalon.Models.EntityModels.CodeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeType1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CodeType")
                        .HasComment("代碼類型代碼");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("建立時間");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("建立者");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')")
                        .HasComment("描述說明");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("修改時間");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("修改者");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("('')")
                        .HasComment("代碼類型名稱");

                    b.HasKey("Id")
                        .HasName("PK__CodeType__3214EC270F975522");

                    b.ToTable("CodeType");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ContactPerson", b =>
                {
                    b.Property<long>("ContactPersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ContactPersonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ContactPersonId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("連絡電話");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("名字");

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasComment("暱稱");

                    b.HasKey("ContactPersonId");

                    b.ToTable("ContactPerson");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.NotificationLog", b =>
                {
                    b.Property<long>("NotificationLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("NotificationLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("NotificationLogId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("RecipientId")
                        .HasColumnType("bigint")
                        .HasColumnName("RecipientID");

                    b.Property<string>("RecipientType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<long?>("RelatedPetId")
                        .HasColumnType("bigint")
                        .HasColumnName("RelatedPetID");

                    b.Property<long?>("RelatedSubscriptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("RelatedSubscriptionID");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SendStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("PENDING");

                    b.Property<DateTime?>("SentTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NotificationLogId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("RelatedPetId");

                    b.HasIndex("RelatedSubscriptionId");

                    b.ToTable("NotificationLog");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PaymentRecord", b =>
                {
                    b.Property<long>("PaymentRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PaymentRecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentRecordId"));

                    b.Property<decimal?>("ActualPrice")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("CASH");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("COMPLETED");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("SERVICE");

                    b.Property<long?>("PetId")
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    b.Property<decimal?>("ReceivablePrice")
                        .HasColumnType("money");

                    b.Property<long?>("ReserveRecordId")
                        .HasColumnType("bigint")
                        .HasColumnName("ReserveRecordID");

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("SubscriptionID");

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaymentRecordId");

                    b.HasIndex("PetId");

                    b.HasIndex("ReserveRecordId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("PaymentRecord");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Pet", b =>
                {
                    b.Property<long>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PetId"));

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("date")
                        .HasComment("生日");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("品種");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("性別");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("NormalPrice")
                        .HasColumnType("money")
                        .HasComment("單次價格");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名字");

                    b.Property<decimal?>("SubscriptionPrice")
                        .HasColumnType("money")
                        .HasComment("包月價格");

                    b.HasKey("PetId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PetRelation", b =>
                {
                    b.Property<long>("PetRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PetRelationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PetRelationId"));

                    b.Property<long>("ContactPersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("ContactPersonID");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    b.Property<string>("RelationshipType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("OWNER")
                        .HasComment("關係類型");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("PetRelationId");

                    b.HasIndex("ContactPersonId");

                    b.HasIndex("PetId");

                    b.ToTable("PetRelation");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PetServiceDuration", b =>
                {
                    b.Property<long>("PetServiceDurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PetServiceDurationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PetServiceDurationId"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("建立時間");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("建立者");

                    b.Property<int?>("CustomDuration")
                        .HasColumnType("int")
                        .HasComment("客製化時長，覆蓋服務預設時長（以分鐘為單位）");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("修改時間");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("修改者");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("備註說明");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("ServiceID");

                    b.HasKey("PetServiceDurationId");

                    b.HasIndex("PetId");

                    b.HasIndex("ServiceId");

                    b.ToTable("PetServiceDuration");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PetServicePrice", b =>
                {
                    b.Property<long>("PetServicePriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PetServicePriceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PetServicePriceId"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("建立時間");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("建立者");

                    b.Property<decimal?>("CustomPrice")
                        .HasColumnType("money")
                        .HasComment("客製化價格，覆蓋服務預設價格");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasComment("客製化時長，覆蓋服務預設時長");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("修改時間");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("修改者");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("備註說明");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("ServiceID");

                    b.HasKey("PetServicePriceId");

                    b.HasIndex("PetId");

                    b.HasIndex("ServiceId");

                    b.ToTable("PetServicePrice");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ReservationService", b =>
                {
                    b.Property<long>("ReservationServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ReservationServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReservationServiceId"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("建立時間");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("建立者");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasComment("服務時長（分鐘）");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("修改時間");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("修改者");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("備註說明");

                    b.Property<long>("ReserveRecordId")
                        .HasColumnType("bigint")
                        .HasColumnName("ReserveRecordID");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint")
                        .HasColumnName("ServiceID");

                    b.Property<decimal>("ServicePrice")
                        .HasColumnType("money")
                        .HasComment("服務價格");

                    b.HasKey("ReservationServiceId");

                    b.HasIndex("ReserveRecordId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ReservationService");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ReserveRecord", b =>
                {
                    b.Property<long>("ReserveRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ReserveRecordID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReserveRecordId"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    b.Property<DateTime>("ReserverDate")
                        .HasColumnType("date")
                        .HasColumnName("ReserverDate ");

                    b.Property<TimeSpan>("ReserverTime")
                        .HasColumnType("time")
                        .HasColumnName("ReserverTime ");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("PENDING");

                    b.Property<int>("SubscriptionDeductionCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("SubscriptionID");

                    b.Property<decimal>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0.00m);

                    b.Property<bool>("UseSubscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ReserveRecordId");

                    b.HasIndex("PetId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("ReserveRecord");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Scrole", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__SCRole__8AFACE3A6F25AC8C");

                    b.ToTable("SCRole", (string)null);
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Scuser", b =>
                {
                    b.Property<long>("ScuserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SCUserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ScuserId"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ScuserId");

                    b.ToTable("SCUser", (string)null);
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Service", b =>
                {
                    b.Property<long>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ServiceId"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("money")
                        .HasComment("基礎價格");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("建立時間");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("建立者");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("服務描述");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasComment("服務時長（分鐘）");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("修改時間");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("修改者");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("服務項目名稱");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasComment("服務類型，關聯至SystemCode");

                    b.Property<int>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("顯示排序");

                    b.HasKey("ServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Subscription", b =>
                {
                    b.Property<long>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SubscriptionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SubscriptionId"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PetId")
                        .HasColumnType("bigint")
                        .HasColumnName("PetID");

                    b.Property<int>("ReservedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("SubscriptionDate")
                        .HasColumnType("date");

                    b.Property<decimal>("SubscriptionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SubscriptionTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("SubscriptionTypeID");

                    b.Property<int>("TotalUsageLimit")
                        .HasColumnType("int");

                    b.Property<int>("UsedCount")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("PetId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.SubscriptionType", b =>
                {
                    b.Property<long>("SubscriptionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SubscriptionTypeId"));

                    b.Property<string>("AvailableServiceTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DefaultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DefaultUsageLimit")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriptionTypeId");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.SystemCode", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CodeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CodeId")
                        .HasName("PK__SystemCo__C6DE2C358B5ECB32");

                    b.HasIndex(new[] { "CodeType", "Code" }, "UQ_CodeType")
                        .IsUnique();

                    b.ToTable("SystemCode");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.NotificationLog", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.ContactPerson", "Recipient")
                        .WithMany("NotificationLog")
                        .HasForeignKey("RecipientId")
                        .HasConstraintName("FK_NotificationLog_ContactPerson");

                    b.HasOne("PetSalon.Models.EntityModels.Pet", "RelatedPet")
                        .WithMany("NotificationLog")
                        .HasForeignKey("RelatedPetId")
                        .HasConstraintName("FK_NotificationLog_Pet");

                    b.HasOne("PetSalon.Models.EntityModels.Subscription", "RelatedSubscription")
                        .WithMany("NotificationLog")
                        .HasForeignKey("RelatedSubscriptionId")
                        .HasConstraintName("FK_NotificationLog_Subscription");

                    b.Navigation("Recipient");

                    b.Navigation("RelatedPet");

                    b.Navigation("RelatedSubscription");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PaymentRecord", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.Pet", "Pet")
                        .WithMany("PaymentRecord")
                        .HasForeignKey("PetId")
                        .HasConstraintName("FK_PaymentRecord_Pet");

                    b.HasOne("PetSalon.Models.EntityModels.ReserveRecord", "ReserveRecord")
                        .WithMany("PaymentRecord")
                        .HasForeignKey("ReserveRecordId")
                        .HasConstraintName("FK_PaymentRecord_ReserveRecord");

                    b.HasOne("PetSalon.Models.EntityModels.Subscription", "Subscription")
                        .WithMany("PaymentRecord")
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK_PaymentRecord_Subscription");

                    b.Navigation("Pet");

                    b.Navigation("ReserveRecord");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PetRelation", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.ContactPerson", "ContactPerson")
                        .WithMany("PetRelation")
                        .HasForeignKey("ContactPersonId")
                        .IsRequired()
                        .HasConstraintName("FK_PetRelation_ContactPerson");

                    b.HasOne("PetSalon.Models.EntityModels.Pet", "Pet")
                        .WithMany("PetRelation")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK_PetRelation_Pet");

                    b.Navigation("ContactPerson");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PetServiceDuration", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.Pet", "Pet")
                        .WithMany("PetServiceDuration")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PetServiceDuration_Pet");

                    b.HasOne("PetSalon.Models.EntityModels.Service", "Service")
                        .WithMany("PetServiceDuration")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PetServiceDuration_Service");

                    b.Navigation("Pet");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.PetServicePrice", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.Pet", "Pet")
                        .WithMany("PetServicePrice")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PetServicePrice_Pet");

                    b.HasOne("PetSalon.Models.EntityModels.Service", "Service")
                        .WithMany("PetServicePrice")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PetServicePrice_Service");

                    b.Navigation("Pet");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ReservationService", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.ReserveRecord", "ReserveRecord")
                        .WithMany("ReservationService")
                        .HasForeignKey("ReserveRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ReservationService_ReserveRecord");

                    b.HasOne("PetSalon.Models.EntityModels.Service", "Service")
                        .WithMany("ReservationService")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ReservationService_Service");

                    b.Navigation("ReserveRecord");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ReserveRecord", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.Pet", "Pet")
                        .WithMany("ReserveRecord")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK_ReserveRecord_Pet_PetID");

                    b.HasOne("PetSalon.Models.EntityModels.Subscription", "Subscription")
                        .WithMany("ReserveRecord")
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK_ReserveRecord_Subscription_SubscriptionID");

                    b.Navigation("Pet");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Subscription", b =>
                {
                    b.HasOne("PetSalon.Models.EntityModels.Pet", "Pet")
                        .WithMany("Subscription")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK_Subscription_Pet");

                    b.HasOne("PetSalon.Models.EntityModels.SubscriptionType", "SubscriptionTypeNavigation")
                        .WithMany("Subscription")
                        .HasForeignKey("SubscriptionTypeId")
                        .HasConstraintName("FK_Subscription_SubscriptionType");

                    b.Navigation("Pet");

                    b.Navigation("SubscriptionTypeNavigation");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ContactPerson", b =>
                {
                    b.Navigation("NotificationLog");

                    b.Navigation("PetRelation");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Pet", b =>
                {
                    b.Navigation("NotificationLog");

                    b.Navigation("PaymentRecord");

                    b.Navigation("PetRelation");

                    b.Navigation("PetServiceDuration");

                    b.Navigation("PetServicePrice");

                    b.Navigation("ReserveRecord");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.ReserveRecord", b =>
                {
                    b.Navigation("PaymentRecord");

                    b.Navigation("ReservationService");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Service", b =>
                {
                    b.Navigation("PetServiceDuration");

                    b.Navigation("PetServicePrice");

                    b.Navigation("ReservationService");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.Subscription", b =>
                {
                    b.Navigation("NotificationLog");

                    b.Navigation("PaymentRecord");

                    b.Navigation("ReserveRecord");
                });

            modelBuilder.Entity("PetSalon.Models.EntityModels.SubscriptionType", b =>
                {
                    b.Navigation("Subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
